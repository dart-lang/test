language: dart

# Build stages: https://docs.travis-ci.com/user/build-stages/.
stages:
- presubmit
- build
- testing

# 1. Run dartfmt, dartanalyzer, pub run test (VM).
# 2. Then run a build.
# 3. Then run tests compiled via dartdevc and dart2js.
jobs:
    include:
    # mockito tests cannot run on stable until stable is >= 2.10.0, as "2.10.0"
    # is the version required by analyzer. See
    # https://github.com/dart-lang/build/issues/2685.
    #- stage: presubmit
    #  name: "2.9.0 analyzer"
    #  script: ./tool/travis.sh dartanalyzer
    #  dart: 2.9.0
    #- stage: presubmit
    #  name: "2.9.0 vm test"
    #  script: ./tool/travis.sh vm_test
    #  dart: 2.9.0
    #- stage: build
    #  name: "2.9.0 DDC build"
    #  script: ./tool/travis.sh dartdevc_build
    #  dart: 2.9.0
    #- stage: testing
    #  name: "2.9.0 DDC test"
    #  script: ./tool/travis.sh dartdevc_test
    #  dart: 2.9.0
    #- stage: testing
    #  name: "2.9.0 code coverage"
    #  script: ./tool/travis.sh coverage
    #  dart: 2.9.0

    - stage: presubmit
      name: "dev dartfmt"
      script: ./tool/travis.sh dartfmt
      dart: dev
    - stage: presubmit
      name: "dev analyzer"
      script: ./tool/travis.sh dartanalyzer
      dart: dev
    - stage: presubmit
      name: "dev vm test"
      script: ./tool/travis.sh vm_test
      dart: dev
    - stage: build
      name: "dev DDC build"
      script: ./tool/travis.sh dartdevc_build
      dart: dev
    - stage: testing
      name: "dev DDC test"
      script: ./tool/travis.sh dartdevc_test
      dart: dev
    - stage: testing
      name: "dev code coverage"
      script: ./tool/travis.sh coverage
      dart: dev

# Only building master means that we don't run two builds for each pull request.
branches:
    only: [master]

# Incremental pub cache and builds.
cache:
    directories:
    - $HOME/.pub-cache
    - .dart_tool
